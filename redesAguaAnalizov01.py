# -*- coding: utf-8 -*-
"""RedesAgua.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bfyaXb9b3CAHXbogGy_UOmxbV-t-fU--

<p><img alt="UNQ logo" height="45px" src="http://www.unq.edu.ar/images/logo_unqui_footer.png" align="left" hspace="10px" vspace="0px"></p><h1>Redes Neuronales y Lógica Difusa</h1>

# Análisis de resultados de redes para grupo de agua

Importo los datos del repositorio de la materia
"""

# Esto lo tengo que ejecutar solamente si quiero importar los datos del GitHub, y si lo hago
# debo hacerlo solamente una vez.
#!git clone https://github.com/redes-unq/aguaMData.git

"""Importo módulos a utilizar. En este caso además de los que venimos utilizando vamos a utilizar también el método *io* del módulo [*scipy*](https://www.scipy.org/about.html), para poder tomar los datos del archivo .mat"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.io import loadmat
import os
from pathlib import Path

%matplotlib qt

"""Defino los arreglos en los que almacenaré los datos"""

red = []
perf = []
vperf = []
tperf = []

"""Listo los archivos"""


base_path = Path(__file__).parent
file_path = (base_path / "aguaMData").resolve()
archivos = sorted(os.listdir(file_path))
archivosFiltados = [] 
for aux in archivos:
  if (aux[-3:] == 'mat'):
    archivosFiltados.append(aux[:-4])
archivos = archivosFiltados

"""Importo los datos"""

for auxArchivo in archivos:
  datosImportados = loadmat('aguaMData/' + auxArchivo)
  datosTr = datosImportados["tr"]
  red.append(auxArchivo)
  perf.append(datosTr[0]['perf'][0][0])
  vperf.append(datosTr[0]['vperf'][0][0])
  tperf.append(datosTr[0]['tperf'][0][0])

"""Grafico los datos"""

f1, ax1 = plt.subplots(3, 1)
for i in range(len(perf)):
  ax1[0].plot(perf[i], label = red[i])
  ax1[1].plot(vperf[i], label = red[i])
  ax1[2].plot(tperf[i], label = red[i])
ax1[0].set_xlim([0, 10])
ax1[1].set_xlim([0, 10])
ax1[2].set_xlim([0, 10])
f1.suptitle('Simulaciones agua')
f1.legend(bbox_to_anchor=(1.05, 1.0), loc = 'upper right', ncol=3)
plt.gca().yaxis.set_minor_formatter(plt.NullFormatter())
plt.subplots_adjust(hspace=0.55, wspace=0.35)
plt.show()